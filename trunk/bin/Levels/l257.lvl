<?xml version="1.0" encoding="utf-8"?>
<level id="galaga" levelpack="Control Cup" rversion="0.2.5">
	<info>
		<name>AgAlAgA</name>
		<description>Playing space invaders in xmoto is no longer a dream</description>
		<author>the only dude</author>
		<date>29/07/2006</date>
		<border texture="Space"/>
		<sky zoom="0.1" offset="5.0" 
		color_r="255" color_g="0" color_b="0" color_a="0">Space</sky>
	</info>
	<theme_replacements>
		<sprite_replacement old_name="Strawberry" new_name="alien"/>
		<sprite_replacement old_name="Wrecker" new_name="laser"/>
	</theme_replacements>
	<script>
levelDims = {left=0, right=42, top=20, bottom=0}

alienState_dead = 0
alienState_run  = 1

backEnemies  = {enemy0 = alienState_run, enemy1 = alienState_run, enemy2 = alienState_run, enemy3 = alienState_run, enemy4 = alienState_run,
		enemy5 = alienState_run, enemy6 = alienState_run, enemy7 = alienState_run, enemy8 = alienState_run}
frontEnemies = {enemy10 = alienState_run, enemy11 = alienState_run, enemy12 = alienState_run, enemy13 = alienState_run, enemy14 = alienState_run,
		enemy15 = alienState_run, enemy16 = alienState_run, enemy17 = alienState_run, enemy18 = alienState_run}

laserState_dead = 0
laserState_wait = 1
laserState_run  = 2

alienLasers  = {EnemyLaser0 = laserState_dead, EnemyLaser1 = laserState_dead, EnemyLaser2 = laserState_dead, EnemyLaser3 = laserState_dead, EnemyLaser4 = laserState_dead,
		EnemyLaser5 = laserState_dead, EnemyLaser6 = laserState_dead, EnemyLaser7 = laserState_dead, EnemyLaser8 = laserState_dead, EnemyLaser9 = laserState_dead}
motomanLasers = {MyLaser0 = laserState_dead, MyLaser1 = laserState_dead, MyLaser2 = laserState_dead, MyLaser3 = laserState_dead}

-- alien movement offsets
alienXMovement = 0.25
alienYMovement = 0.5
alienXMaxMovement = 5.0
numberOfMovementsBeforeDirectionChange = alienXMaxMovement/alienXMovement
numberOfMovements = 0

-- number of ticks between two movements
waitBetweenAlienMovement = 50
numberOfTickSinceLastMove = 0

aliensAcceleration = 10

initialDistanceBetweenHeadAndLaser = 2
initX = 0
initY = 31

motomanLasersLaunched = 0
motomanMaxLasers = 4

motomanLasersTop = 10 + 1


accelerate = false
endmessage = true

lasersAnimationDuration = 532
lasersAnimationLength   = 10

function testCollision(laser, alien)
	-- to be remplaced by a real circle collision
	-- made by xmoto using entity's r

	laserX, laserY = Game.GetEntityPos(laser)
	alienX, alienY = Game.GetEntityPos(alien)
	alienR = Game.GetEntityRadius(alien)
	laserR = Game.GetEntityRadius(laser)

	return laserX + laserR &gt; alienX - alienR
	       and laserX - laserR &lt; alienX + alienR
	       and laserY + laserR &gt; alienY - alienR
	       and laserY - laserR &lt; alienY + alienR
end


function moveAliens()
	numberOfTickSinceLastMove = numberOfTickSinceLastMove + 1

	-- move aliens and allow them to shoot.
	-- aliens goes faster and faster.
	if numberOfTickSinceLastMove &gt; waitBetweenAlienMovement then
		numberOfTickSinceLastMove = 0
		numberOfMovements = numberOfMovements + 1

		if numberOfMovements == numberOfMovementsBeforeDirectionChange then
			numberOfMovements = 0
			motomanLasersTop = motomanLasersTop - alienYMovement
			-- aliens go down
			for index, enemies in pairs({backEnemies, frontEnemies}) do
				for alien, state in pairs(enemies) do
					if state == alienState_run then
						x, y = Game.GetEntityPos(alien)
						alienR = Game.GetEntityRadius(alien)
						y = y - alienYMovement
						if y &lt; levelDims["bottom"]+alienR then
							playerSurrender()
							return
						else
							Game.SetEntityPos(alien, x, y)
						end
					end
				end
			end
			-- accelerate them when they go down 2 times
			if accelerate then
				if waitBetweenAlienMovement &gt; aliensAcceleration then
					waitBetweenAlienMovement = waitBetweenAlienMovement - aliensAcceleration
				end
				accelerate = false
			else
				accelerate = true
			end
			changeAliensMovement()
		end
		aliensShoot()
	end
end


function alienWantToShoot()
	-- when there is less aliens, they shoot more wrekers
	ceils = {50,60,70,80,90,90,91,91,92,92,93,93,94,94,95,95,95,96,96,96}

	return math.random(100) &gt; ceils[Game.RemainingStrawberries()]
end

function findFreeAlienLaser()
	for laser, state in pairs(alienLasers) do
		if state == laserState_dead then
			alienLasers[laser] = laserState_run
			return laser
		end
	end
	return nil
end

function aliensShoot()
	for key,enemies in pairs({backEnemies, frontEnemies}) do
		for alien, state in pairs(enemies) do
			if state == alienState_run then
				if alienWantToShoot() then
					laser = findFreeAlienLaser()
					if laser ~= nil then
						x, y = Game.GetEntityPos(alien)
						alienR = Game.GetEntityRadius(alien)
						Game.SetEntityPos(laser, x, y - alienR)
						-- play only the first half of the animation
						-- because wrekers have to only go down
						Game.SetDynamicEntityTranslation(laser, 0, -lasersAnimationLength, lasersAnimationDuration, 0, lasersAnimationDuration/2)
					end
				end
			end
		end
	end
end


function motomanLaserDie(key)
	motomanLasers[key] = laserState_dead
	motomanLasersLaunched = motomanLasersLaunched - 1
	Game.SetEntityPos(key, initX, initY)
	Game.SetDynamicEntityNone(key)
end

function alienLaserDie(key)
	alienLasers[key] = laserState_dead
	-- move unused entity outside of the visible level
	Game.SetEntityPos(key, initX, initY)
	Game.SetDynamicEntityNone(key)
end

function alienDie(alienTab, alienKey)
	if alienTab[alienKey] == alienState_run then
		alienTab[alienKey] = alienState_dead
	end

	Game.KillEntity(alienKey)
end

function playerSurrender()
	Game.Message("Looser !!")
	Game.KillPlayer()

	for key, value in pairs(alienLasers) do
		Game.SetDynamicEntityNone(key)
	end
end

function testLasersCollisions()
	-- collision test with lasers
	for laser, state in pairs(motomanLasers) do
		if state == laserState_run then
			x, y = Game.GetEntityPos(laser)

			if y &gt; motomanLasersTop then
				motomanLaserDie(laser)
			else
				-- has a motoman laser explode an alien ??
				for index,alienTab in pairs({frontEnemies, backEnemies}) do
					for alienKey, alienState in pairs(alienTab) do
						if alienState == alienState_run then
							if testCollision(laser, alienKey) then
								alienDie(alienTab, alienKey)
								motomanLaserDie(laser)
							end
						end
					end
				end
			end
		end
	end
	for laser, state in pairs(alienLasers) do
		if state == laserState_run then
			x, y = Game.GetEntityPos(laser)
			-- collisions with the player are automatically done,
			-- we just have to test collisions with the ground
			if y &lt; levelDims['bottom'] then
				alienLaserDie(laser)
			end
		end
	end
end
function Tick()
	if Game.RemainingStrawberries() == 0 then
		if endmessage == true then
			Game.Message("Impressive !!")
			Game.SetEntityPos("MyEndOfLevel0", (levelDims["right"] - levelDims["left"])/2, 1)
			-- we want the message only once
			endmessage = false
		end
	else
		moveAliens()
		testLasersCollisions()

		changeMotomanNewLasersState()
	end

	return true
end
function OnLoad()
	Game.SetKeyHook("B", "ThrowWreker")

	Game.SetGravity(0, 9.81*2*-1)
	Game.CameraMove(0.0, 4.2)

	Game.Message("Save your ass, destroy the aliens !")
	Game.Message("Use the 'B' key to throw wrekers to this bastards !")

	changeAliensMovement()

	return true
end

function changeAliensMovement()
	animationDuration = numberOfMovementsBeforeDirectionChange * waitBetweenAlienMovement

	for alien, state in pairs(frontEnemies) do
		Game.SetDynamicEntityNone(alien)
		Game.SetDynamicEntityTranslation(alien, -alienXMaxMovement, 0, animationDuration, 0, animationDuration)
	end

	for alien, state in pairs(backEnemies) do
		Game.SetDynamicEntityNone(alien)
		Game.SetDynamicEntityTranslation(alien, alienXMaxMovement, 0, animationDuration, 0, animationDuration)
	end
end

function ThrowWreker()
	-- limits the number of available lasers for the motoman
	if motomanLasersLaunched == motomanMaxLasers then
		return
	end
	-- find a free laser slot
	for laser, state in pairs(motomanLasers) do
		if state == laserState_dead then
			laserToThrow = laser
			break
		end
	end

	motomanLasersLaunched = motomanLasersLaunched + 1

	x, y, bright = Game.GetPlayerPosition()
	y = y + initialDistanceBetweenHeadAndLaser

	motomanLasers[laserToThrow] = laserState_wait

	Game.SetEntityPos(laserToThrow, x, y)
	Game.SetDynamicEntityTranslation(laserToThrow, 0, lasersAnimationLength, lasersAnimationDuration, 0, lasersAnimationDuration/2)
end

function changeMotomanNewLasersState()
	for laser, state in pairs(motomanLasers) do
		if state == laserState_wait then
			motomanLasers[laser] = laserState_run
		end
	end
end
	</script>
	<limits left="0.000000" right="42.000000" top="13.000000" bottom="0.000000"/>
	<entity id="MyPlayerStart0" typeid="PlayerStart">
		<size r="0.400000"/>
		<position x="2.000000" y="0.000000"/>
	</entity>


	<entity id="enemy0" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="4.000000" y="10.000000"/>
	</entity>
	<entity id="enemy1" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="8.000000" y="10.000000"/>
	</entity>
	<entity id="enemy2" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="12.000000" y="10.000000"/>
	</entity>
	<entity id="enemy3" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="16.000000" y="10.000000"/>
	</entity>
	<entity id="enemy4" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="20.000000" y="10.000000"/>
	</entity>
	<entity id="enemy5" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="24.000000" y="10.000000"/>
	</entity>
	<entity id="enemy6" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="28.000000" y="10.000000"/>
	</entity>
	<entity id="enemy7" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="32.000000" y="10.000000"/>
	</entity>
	<entity id="enemy8" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="36.000000" y="10.000000"/>
	</entity>


	<entity id="enemy10" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="6.000000" y="9.000000"/>
	</entity>
	<entity id="enemy11" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="10.000000" y="9.000000"/>
	</entity>
	<entity id="enemy12" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="14.000000" y="9.000000"/>
	</entity>
	<entity id="enemy13" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="18.000000" y="9.000000"/>
	</entity>
	<entity id="enemy14" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="22.000000" y="9.000000"/>
	</entity>
	<entity id="enemy15" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="26.000000" y="9.000000"/>
	</entity>
	<entity id="enemy16" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="30.000000" y="9.000000"/>
	</entity>
	<entity id="enemy17" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="34.000000" y="9.000000"/>
	</entity>
	<entity id="enemy18" typeid="Strawberry">
		<size r="0.500000"/>
		<position x="38.000000" y="9.000000"/>
	</entity>


	<entity id="MyLaser0" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="MyLaser1" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="MyLaser2" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="MyLaser3" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser0" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser1" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="311.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser2" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser3" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser4" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser5" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser6" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser7" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser8" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="EnemyLaser9" typeid="Wrecker">
		<size r="0.400000"/>
		<position x="0.000000" y="31.000000"/>
		<param name="style" value="default"/>
	</entity>
	<entity id="MyEndOfLevel0" typeid="EndOfLevel">
		<size r="0.500000"/>
		<position x="15.000000" y="20.000000"/>
		<param name="style" value="default"/>
	</entity>

</level>
